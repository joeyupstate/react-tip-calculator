{"version":3,"sources":["Recipt.js","App.js","index.js"],"names":["Recipt","props","state","value","tip","total","service","event","this","setState","target","tipToBeAdded","parseFloat","toFixed","className","type","onChange","handleAmountChange","bind","placeholder","name","handleServiceChange","onClick","makeTip","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8PA+EeA,E,kDA3Eb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAEDC,MAAQ,CACXC,MAAO,GACPC,IAAK,GACLC,MAAO,GACPC,QAAS,IAPM,E,sDAWnB,SAAmBC,GACjBC,KAAKC,SAAS,CACZN,MAAOI,EAAMG,OAAOP,U,iCAIxB,SAAoBI,GAClBC,KAAKC,SAAS,CACZH,QAASC,EAAMG,OAAOP,U,qBAI1B,WACE,IAAIQ,EAAeC,WACjBJ,KAAKN,MAAMC,MAAQK,KAAKN,MAAMI,SAC9BO,QAAQ,GACVL,KAAKC,SAAS,CACZL,IAAKO,EACLN,MAAOO,WAAWJ,KAAKN,MAAMC,OAASS,WAAWD,O,oBAIrD,WACE,OACE,sBAAKG,UAAU,SAAf,UACE,uBACEC,KAAK,OACLZ,MAAOK,KAAKN,MAAMC,MAClBW,UAAU,QACVE,SAAUR,KAAKS,mBAAmBC,KAAKV,MACvCW,YAAY,MAEd,yBACEC,KAAK,UACLN,UAAU,gBACVE,SAAUR,KAAKa,oBAAoBH,KAAKV,MAH1C,UAKE,wBAAQY,KAAK,eAAejB,MAAM,eAAlC,2BAGA,wBAAQiB,KAAK,YAAYjB,MAAM,KAA/B,uBAGA,wBAAQiB,KAAK,OAAOjB,MAAM,MAA1B,kBAGA,wBAAQiB,KAAK,KAAKjB,MAAM,KAAxB,gBAGA,wBAAQiB,KAAK,MAAMjB,MAAM,IAAzB,oBAKF,qBAAIW,UAAU,MAAd,UAAoB,sBAAMA,UAAU,SAAhB,mBAAsCN,KAAKN,MAAME,OACrE,qBAAIU,UAAU,QAAd,UAAsB,sBAAMA,UAAU,SAAhB,qBAAwCN,KAAKN,MAAMG,SACzE,qBAAKS,UAAU,YAAYQ,QAASd,KAAKe,QAAQL,KAAKV,MAAtD,iC,GApEagB,aCSNC,MARf,WACE,OACE,qBAAKX,UAAU,MAAf,SACJ,cAAC,EAAD,OCDAY,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.b8e37b45.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./Recipt.css\";\r\n\r\nclass Recipt extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      value: \"\",\r\n      tip: \"\",\r\n      total: \"\",\r\n      service: \"\",\r\n    };\r\n  }\r\n\r\n  handleAmountChange(event) {\r\n    this.setState({\r\n      value: event.target.value,\r\n    });\r\n  }\r\n\r\n  handleServiceChange(event) {\r\n    this.setState({\r\n      service: event.target.value,\r\n    });\r\n  }\r\n\r\n  makeTip() {\r\n    let tipToBeAdded = parseFloat(\r\n      this.state.value * this.state.service\r\n    ).toFixed(2);\r\n    this.setState({\r\n      tip: tipToBeAdded,\r\n      total: parseFloat(this.state.value) + parseFloat(tipToBeAdded),\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"recipt\">\r\n        <input\r\n          type=\"text\"\r\n          value={this.state.value}\r\n          className=\"input\"\r\n          onChange={this.handleAmountChange.bind(this)}\r\n          placeholder=\"$\"\r\n        />\r\n        <select\r\n          name=\"service\"\r\n          className=\"service-input\"\r\n          onChange={this.handleServiceChange.bind(this)}\r\n        >\r\n          <option name=\"servicelevel\" value=\"Pick Service\">\r\n            Service Level\r\n          </option>\r\n          <option name=\"excellent\" value=\".2\">\r\n            Excellent\r\n          </option>\r\n          <option name=\"good\" value=\".15\">\r\n            Good\r\n          </option>\r\n          <option name=\"ok\" value=\".1\">\r\n            Ok\r\n          </option>\r\n          <option name=\"bad\" value=\"0\">\r\n            Bad\r\n          </option>\r\n        </select>\r\n\r\n        <h1 className=\"tip\"><span className=\"labels\">Tip:$</span>{this.state.tip}</h1>\r\n        <h1 className=\"total\"><span className=\"labels\">Total:$</span>{this.state.total}</h1>\r\n        <div className=\"buttondiv\" onClick={this.makeTip.bind(this)}>\r\n          Generate Tip\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Recipt;\r\n","\nimport './App.css';\nimport Recipt from \"./Recipt\"\n\nfunction App() {\n  return (\n    <div className=\"App\">\n<Recipt />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"./index.css\"\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}